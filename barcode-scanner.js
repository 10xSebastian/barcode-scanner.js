// Generated by CoffeeScript 1.3.3

/*

  BarcodeScanner

  TODO:
   - configuration for when to submit
   - configuration for submit when delay ends
  
    BarcodeScanner.addPrefix "C", (text)=>
    alert(text);

    Regexp 

    BarcodeScanner "c(:term)", (term) =>
      lkajsdfkljasdf

    BarcodeScanner "*", (text) =>
      closest().val(text).closest(form).submit()

    BarcodeScanner "*", 50, (text)=> 

    BarcodeScanner regexp, delay, function
*/


(function() {

  jQuery(function() {
    return $(window).keypress(window.BarcodeScanner.onKeyPress);
  });

  window.BarcodeScanner = (function() {

    function BarcodeScanner() {}

    BarcodeScanner.delay = 50;

    BarcodeScanner.timer = null;

    BarcodeScanner.buffer = null;

    BarcodeScanner.knownPrefixes = [];

    BarcodeScanner.execute = function() {
      var code, prefix, target;
      target = $("*:focus:first").length ? $("*:focus:first") : $("[data-barcode-scanner-target]:last");
      prefix = BarcodeScanner.findPrefix(target);
      code = BarcodeScanner.buffer.replace(/^\s\w\s/, "");
      if (target.is(":not(:focus)") && (this.knownPrefixes[prefix] != null) && (typeof this.knownPrefixes[prefix] === "function")) {
        this.knownPrefixes[prefix].call(this, code);
        return true;
      }
      target.val("").val(code);
      return this.submit(target);
    };

    BarcodeScanner.findPrefix = function() {
      if (BarcodeScanner.buffer.match(/^\s\w\s/) != null) {
        return BarcodeScanner.buffer.match(/^\s\w\s/).join().replace(/\s/g, "");
      }
    };

    BarcodeScanner.onKeyPress = function(e) {
      var char, charCode, _ref;
      if (e == null) {
        e = window.event;
      }
      charCode = typeof e.which === "number" ? e.which : e.keyCode;
      char = String.fromCharCode(charCode);
      console.log(charCode === 13);
      if ((charCode === 13) && (BarcodeScanner.buffer != null)) {
        e.preventDefault();
        BarcodeScanner.execute();
        return BarcodeScanner.buffer = null;
      } else {
        if ((_ref = BarcodeScanner.buffer) == null) {
          BarcodeScanner.buffer = "";
        }
        BarcodeScanner.buffer += _char;
        window.clearTimeout(BarcodeScanner.timer);
        return BarcodeScanner.timer = window.setTimeout(function() {
          return BarcodeScanner.buffer = null;
        }, BarcodeScanner.delay);
      }
    };

    BarcodeScanner.submit = function(target) {
      if (!(target.closest("[data-prevent-barcode-scanner-submit]").length || (target.data("prevent-barcode-scanner-submit") != null))) {
        return $(target).closest("form").submit();
      }
    };

    return BarcodeScanner;

  }).call(this);

}).call(this);
